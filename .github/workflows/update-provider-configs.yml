name: Update providerConfigs

on:
  schedule:
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  update-configs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Update provider configs  
      run: |
        node -e "
        const fs = require('fs');
        const path = require('path');
        
        const PROVIDERS = {
          claude: { name: 'Claude', icon: 'ü§ñ', color: '#FF6B35', hostname: 'api.anthropic.com', keyFile: '.aiduino-claude-api-key', apiKeyUrl: 'https://console.anthropic.com/api-keys', fallback: 'claude-3-5-sonnet-20241022', prices: { input: 0.003, output: 0.015 } },
          chatgpt: { name: 'ChatGPT', icon: 'üß†', color: '#10A37F', hostname: 'api.openai.com', keyFile: '.aiduino-openai-api-key', apiKeyUrl: 'https://platform.openai.com/api-keys', fallback: 'gpt-4', prices: { input: 0.03, output: 0.06 } },
          gemini: { name: 'Gemini', icon: '‚ú®', color: '#4285F4', hostname: 'generativelanguage.googleapis.com', keyFile: '.aiduino-gemini-api-key', apiKeyUrl: 'https://makersuite.google.com/app/apikey', fallback: 'gemini-1.5-pro', prices: { input: 0.00125, output: 0.005 } },
          groq: { name: 'Groq', icon: '‚ö°', color: '#F55036', hostname: 'api.groq.com', keyFile: '.aiduino-groq-api-key', apiKeyUrl: 'https://console.groq.com/keys', fallback: 'llama-3.3-70b-versatile', prices: { input: 0.0005, output: 0.0008 } },
          mistral: { name: 'Mistral', icon: 'üåü', color: '#FF7000', hostname: 'api.mistral.ai', keyFile: '.aiduino-mistral-api-key', apiKeyUrl: 'https://console.mistral.ai/', fallback: 'mistral-large-latest', prices: { input: 0.001, output: 0.003 } },
          perplexity: { name: 'Perplexity', icon: 'üîç', color: '#20B2AA', hostname: 'api.perplexity.ai', keyFile: '.aiduino-perplexity-api-key', apiKeyUrl: 'https://www.perplexity.ai/settings/api', fallback: 'llama-3.1-sonar-large-128k-online', prices: { input: 0.001, output: 0.003 } },
          cohere: { name: 'Cohere', icon: 'üí´', color: '#9333EA', hostname: 'api.cohere.ai', keyFile: '.aiduino-cohere-api-key', apiKeyUrl: 'https://dashboard.cohere.ai/api-keys', fallback: 'command-r-plus', prices: { input: 0.0015, output: 0.002 } }
        };
        
        const now = new Date();
        const version = String(now.getDate()).padStart(2, '0') + String(now.getMonth() + 1).padStart(2, '0') + String(now.getFullYear()).slice(-2);
        
        let config = '/*\n * AI.duino - Provider Configurations\n * Auto-generated on ' + now.toISOString() + '\n */\n\n\"use strict\";\n\nconst CONFIG_VERSION = \"' + version + '\";\nconst REMOTE_CONFIG_URL = \"https://raw.githubusercontent.com/NikolaiRadke/AI.duino/refs/heads/main/aiduino/extension/out/config/providerConfigs.js\";\n\nconst PROVIDER_CONFIGS = {\n';
        
        for (const [id, p] of Object.entries(PROVIDERS)) {
          config += '  ' + id + ': {\n    name: \"' + p.name + '\",\n    icon: \"' + p.icon + '\",\n    color: \"' + p.color + '\",\n    hostname: \"' + p.hostname + '\",\n    fallback: \"' + p.fallback + '\",\n    keyFile: \"' + p.keyFile + '\",\n    apiKeyUrl: \"' + p.apiKeyUrl + '\",\n    prices: { input: ' + p.prices.input + ', output: ' + p.prices.output + ' }\n  },\n';
        }
        
        config += '};\n\nmodule.exports = { PROVIDER_CONFIGS, CONFIG_VERSION, REMOTE_CONFIG_URL };';
        
        const configPath = 'aiduino/extension/out/config/providerConfigs.js';
        fs.writeFileSync(configPath, config);
        console.log('Generated complete provider configs for version', version);
        "
        
    - name: Commit changes
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add aiduino/extension/out/config/providerConfigs.js
        if ! git diff --cached --quiet; then
          git commit -m "Auto-update provider configs to $(date +'%d%m%y')"
          git push
        else
          echo "No changes to commit"
        fi
