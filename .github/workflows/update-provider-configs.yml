name: Update Provider Configs (Claude-generated)

on:
  schedule:
    - cron: '0 2 * * 0' # Jeden Sonntag 02:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-configs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install @anthropic-ai/sdk

      - name: Generate providerConfigs.js with Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          node <<'EOF'
          import fs from "fs";
          import Anthropic from "@anthropic-ai/sdk";

          const client = new Anthropic({
            apiKey: process.env.ANTHROPIC_API_KEY
          });

          const prompt = `
          Erstelle ein gültiges JavaScript-Modul \`providerConfigs.js\` 
          für ein Arduino-IDE Plugin.

          Die Struktur muss so aussehen:
          module.exports = { PROVIDER_CONFIGS, CONFIG_VERSION, REMOTE_CONFIG_URL };

          Anforderungen:
          - PROVIDER_CONFIGS enthält Objekte für Claude, ChatGPT, Gemini, Groq, Mistral, Perplexity, Cohere.
          - Für jeden Provider: aktuelles Modell (Fallback), API-URL, Preise (input/output), keyFile, apiKeyUrl, Icon, Farbe.
          - CONFIG_VERSION = aktuelles Datum im Format DDMMYY.
          - REMOTE_CONFIG_URL zeigt auf das GitHub-Repo (raw URL).
          - Ausgabe nur reinen gültigen JS-Code (keine Erklärungen).
          `;

          const run = async () => {
            const resp = await client.messages.create({
              model: "claude-3-5-sonnet-20241022",
              max_tokens: 1500,
              messages: [{ role: "user", content: prompt }]
            });

            const content = resp.content[0].text;
            fs.writeFileSync("aiduino/extension/out/config/providerConfigs.js", content);
            console.log("✅ providerConfigs.js von Claude generiert");
          };

          run().catch(err => {
            console.error("❌ Fehler beim Generieren:", err);
            process.exit(1);
          });
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add aiduino/extension/out/config/providerConfigs.js
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update provider configs (Claude-generated)"
            git push
          else
            echo "No changes to commit"
          fi
name: Update Provider Configs (Claude-generated)

on:
  schedule:
    - cron: '0 2 * * 0' # Jeden Sonntag 02:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-configs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install @anthropic-ai/sdk

      - name: Generate providerConfigs.js with Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          node <<'EOF'
          import fs from "fs";
          import Anthropic from "@anthropic-ai/sdk";

          const client = new Anthropic({
            apiKey: process.env.ANTHROPIC_API_KEY
          });

          const prompt = `
          Erstelle ein gültiges JavaScript-Modul \`providerConfigs.js\` 
          für ein Arduino-IDE Plugin.

          Die Struktur muss so aussehen:
          module.exports = { PROVIDER_CONFIGS, CONFIG_VERSION, REMOTE_CONFIG_URL };

          Anforderungen:
          - PROVIDER_CONFIGS enthält Objekte für Claude, ChatGPT, Gemini, Groq, Mistral, Perplexity, Cohere.
          - Für jeden Provider: aktuelles Modell (Fallback), API-URL, Preise (input/output), keyFile, apiKeyUrl, Icon, Farbe.
          - CONFIG_VERSION = aktuelles Datum im Format DDMMYY.
          - REMOTE_CONFIG_URL zeigt auf das GitHub-Repo (raw URL).
          - Ausgabe nur reinen gültigen JS-Code (keine Erklärungen).
          `;

          const run = async () => {
            const resp = await client.messages.create({
              model: "claude-3-5-sonnet-20241022",
              max_tokens: 1500,
              messages: [{ role: "user", content: prompt }]
            });

            const content = resp.content[0].text;
            fs.writeFileSync("aiduino/extension/out/config/providerConfigs.js", content);
            console.log("✅ providerConfigs.js von Claude generiert");
          };

          run().catch(err => {
            console.error("❌ Fehler beim Generieren:", err);
            process.exit(1);
          });
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add aiduino/extension/out/config/providerConfigs.js
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update provider configs (Claude-generated)"
            git push
          else
            echo "No changes to commit"
          fi

